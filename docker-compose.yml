services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: greglixandrao/busca-cep-api:latest
    container_name: busca-cep-backend
    ports:
      - "8001:8000"
    environment:
      - APP_NAME=API de Busca de CEP
      - APP_VERSION=1.0.0
      - DEBUG=False
      - HOST=0.0.0.0
      - PORT=8000
      - VIACEP_BASE_URL=https://viacep.com.br/ws
      - VIACEP_TIMEOUT=10
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - busca-cep-network

  # Frontend Web
  frontend:
    build:
      context: ./front-end
      dockerfile: Dockerfile
    image: greglixandrao/busca-cep-frontend:latest
    container_name: busca-cep-frontend
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - busca-cep-network
    
  # Opcional: Reverse Proxy Nginx (descomente se necessário)
  # nginx:
  #   image: nginx:alpine
  #   container_name: busca-cep-proxy
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./nginx/ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - frontend
  #     - backend
  #   restart: unless-stopped
  #   networks:
  #     - busca-cep-network

networks:
  busca-cep-network:
    driver: bridge
    name: busca-cep-network

# Volumes para persistência (se necessário no futuro)
# volumes:
#   busca_cep_data:
